# This is a basic workflow to help you get started with Actions
name: deploy

permissions:
  contents: write

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install
        run: npm install

      - name: Generate Environment
        run: echo "NUXT_PUBLIC_API_SERVER=${{ vars.NUXT_PUBLIC_API_SERVER }}"
        run: echo "NUXT_PUBLIC_API_SERVER=${{ vars.NUXT_PUBLIC_API_SERVER }}" >> .env.production
        run: echo "NUXT_PUBLIC_USE_FAKE_DATA=${{ vars.NUXT_PUBLIC_USE_FAKE_DATA }}" >> .env.production

      - name: Build
        run: npm run generate

      - name: Generate .nojekyll file
        run: touch ./.output/public/.nojekyll

      # Runs a single command using the runners shell
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          # ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }} # Settings > Secret 建立的 ACCESS_TOKEN，推同個 repo 的話可以不需要
          branch: gh-pages # deploy 到 gh-pages 這個分支
          folder: ./.output/public # build 後的資料夾
